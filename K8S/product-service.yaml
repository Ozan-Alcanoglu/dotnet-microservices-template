apiVersion: apps/v1
kind: Deployment
metadata:
  name: product-service-deployment
  namespace: csmvck8s-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: product-service-api
  template:
    metadata:
      labels:
        app: product-service-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: product-service-api
        image: ozanalcanoglu/cs-product-service:latest
        ports:
        - containerPort: 8080
        env:
        - name: ConnectionStrings__PostgreSqlConn
          value: "Host=postgres-db-service;Port=5432;Database=productdb;Username=postgres;Password=mysecretpassword"
        - name: RABBITMQ_HOST
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: RABBITMQ_HOST
        - name: OTLP_ENDPOINT
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: OTLP_ENDPOINT
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: product-service-api
  namespace: csmvck8s-ns
spec:
  selector:
    app: product-service-api
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080