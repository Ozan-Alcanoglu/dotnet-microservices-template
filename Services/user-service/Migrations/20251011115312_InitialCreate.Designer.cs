// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UserService.Data;

#nullable disable

namespace user_service.Migrations
{
    [DbContext(typeof(UserDbContext))]
    [Migration("20251011115312_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UserService.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 10, 11, 11, 53, 11, 890, DateTimeKind.Utc).AddTicks(5351),
                            Email = "test1@mail.com",
                            FirstName = "Ahmet",
                            IsActive = true,
                            LastName = "Yılmaz",
                            UpdatedAt = new DateTime(2025, 10, 11, 11, 53, 11, 890, DateTimeKind.Utc).AddTicks(5347)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 10, 11, 11, 53, 11, 890, DateTimeKind.Utc).AddTicks(6687),
                            Email = "test2@mail.com",
                            FirstName = "Ayşe",
                            IsActive = true,
                            LastName = "Kaya",
                            UpdatedAt = new DateTime(2025, 10, 11, 11, 53, 11, 890, DateTimeKind.Utc).AddTicks(6686)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
